on: [push, pull_request]

name: Continuous integration

jobs:
  build:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo check

  test-cov:
    name: Test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview
      - run: cargo install grcov
      - run: cargo run --target x86_64-unknown-linux-gnu -p minicov-test
        env:
          RUSTFLAGS: -Cinstrument-coverage -Zno-profiler-runtime
      - run: grcov -t html output.profraw -b target/x86_64-unknown-linux-gnu/debug/minicov-test -s .

  test-pgo:
    name: Test PGO
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview
      - run: cargo install cargo-binutils
      - run: cargo run --target x86_64-unknown-linux-gnu -p minicov-test
        env:
          RUSTFLAGS: -Cprofile-generate -Zno-profiler-runtime
      - run: rust-profdata merge -o output.profdata output.profraw
      - run: cargo run --target x86_64-unknown-linux-gnu -p minicov-test
        env:
          RUSTFLAGS: -Cprofile-use=output.profdata

  test-uefi:
    name: Test UEFI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          targets: x86_64-unknown-uefi
      # Only build minicov, since UEFI targets are no_std and
      # minicov-test uses std.
      - run: cargo build --target x86_64-unknown-uefi -p minicov

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo clippy -- -D warnings
